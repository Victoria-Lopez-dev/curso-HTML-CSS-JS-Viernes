section{
    background-color: darkcyan;
    perspective: 800px;
}
h2{
    width: 200px;
    margin-left: 100px;
    animation: cambios 10s infinite ;
}
.contenedor{
    width: 600px;
    height: 600px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: darkorchid;
    perspective: 1000px;

}
.padre{
    width: 200px;
    height:200px;
    border:2px solid black;
    background-color: cadetblue;
    transform: rotateY(45deg);
    transform-style: preserve-3d;
    /* animation: girar 5s 4; */
    animation-name: girar;
    animation-duration: 5s;
    animation-iteration-count: 3;/* numero de veces a repetir - infinite */
    animation-direction:alternate;/*alternate -reverse -normal*/
    animation-delay:3s ;/*demora el inicio de la animacion (s o ms)*/
    animation-timing-function:cubic-bezier(1,0,.01,1);
    /*velocidad de la animacion 
    ease | ease-in |ease-out | ease-in-out |linear |cubic-bezier()
    */
    animation-fill-mode: forwards;/* modificar el estado en que queda una vez finalizada la animacion */
    /* animation: girar 5s cubic-bezier(1,0,.01,1) 3s 3 alternate forwards; */
}
.hijo{
    width: 200px;
    height:200px;
    border:2px solid black;
    background-color: crimson;
    transform: rotateY(90deg);
}

@keyframes girar {
    from{
        transform: rotateY(90deg);
        background-color: burlywood;
    }
    to{
        transform: rotateX(50deg) rotateY(180deg);
    }
}
@keyframes cambios {
    0%{
        color: red;
    }
    10%{
        transform: translateZ(100px);
    }
    77%{ 
        transform: scale(1.5) rotateX(180deg);
    }
    100%{
        background-color: blueviolet;
        color: white;
    }
}

/*animation -> definir cuadros donde producir cambios en las propiedades de los elementos en distintos tiempos ,en secuencia
@keyframes
animation -> general 
animation-name 
animation-duration
animation-iteration-count


o 
   animation: name duration timing-function delay iteration-count direction fill-mode;
*/